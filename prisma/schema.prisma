
  generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-3.0.x"]
  }
  
  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
        
model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String?
  username          String    @unique
  name              String?
  role              String    @default("user")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  riskAssessments   RiskAssessment[]
  riskMonitors      RiskMonitor[]
  infosecPrograms   InfosecProgram[]
  complianceAudits  ComplianceAudit[]
  payments          Payment[]
  customerShowcases CustomerShowcase[]
}

model RiskAssessment {
  id                Int       @id @default(autoincrement())
  riskData          Json
  impact            Float
  likelihood        Float
  severity          String
  assessmentParams  Json
  report            String?
  errorNotification String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model RiskMonitor {
  id                Int       @id @default(autoincrement())
  riskStatus        String
  riskTrends        Json
  alerts            Json
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model InfosecProgram {
  id                Int       @id @default(autoincrement())
  template          String
  customization     Json
  versionControl    Json
  permissions       Json
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model ComplianceAudit {
  id                Int       @id @default(autoincrement())
  auditType         String
  requirements      Json
  documentation     Json
  status            String
  reminders         Json
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model CustomerShowcase {
  id                Int       @id @default(autoincrement())
  certifications    Json
  branding          Json
  testimonials      Json
  seoElements       Json
  accessibility     Json
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model Payment {
  id                Int       @id @default(autoincrement())
  amount            Float
  paymentMethod     String
  subscriptionInfo  Json
  invoice           String?
  transactionStatus String
  errorMessage      String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}